

DESCRIPTION:

TO DO:

	make the scale so you can set which scale you want it to be in
		through the gui with a drop down button: A, A#, Bb, B, C, C#, Db, D, ect.
		another drop down to select: major, minor, ect.
		toggle to select notes or numbers


	maybe change the scale froma G major to a F# minor
		it would be cool if you could always play the F# minor scale and convert the audio to any scale you want
			in real time

	fix the numbers

		Building a Vocal Range Detection Program in Pygame and Music21
			this guy got the vocal frequency detector to detect vocal pitch properly
			copy the code and see if it works
			othe things to look at:
				Pitch detection in Python
				https://stackoverflow.com/questions/32595404/pitch-detection-in-python
		https://www.makeartwithpython.com/blog/vocal-range-python-music21/

		how the fast fourier transform works
		https://www.youtube.com/watch?v=h7apO7q16V0

		the frequency is off
			when i play a pure tone of 400 Hz with this
				https://www.szynalski.com/tone-generator/
			the graph says its 200 Hz

			vocal pitch monitor python
				https://www.makeartwithpython.com/blog/vocal-range-python-music21/
				https://stackoverflow.com/questions/32595404/pitch-detection-in-python
				https://www.google.com/search?q=music21&oq=music21&aqs=chrome..69i57j0l6j69i60.2151j0j1&sourceid=chrome&ie=UTF-8

		figure out how to only look for the frequency amplitudes over
			a specified range of frequencies with a specified delta

		figure out how to filter out the noise
			ask eric
			make a video explaining it
				when i play a pure tone it isolates the pitch easily
				but when i sing a note it finds it at multiple octives

		--------------------------------------------------------------------------------------------------------

		in this example the programmer verifies the program works with a single pitch noise generator
		and displays the frequency (aka pitch) generated by the program and it matches what the
		generator is set to emit. (see video)
			https://swharden.com/blog/2013-05-09-realtime-fft-audio-visualization-with-python/

			I saved the code in ~/rooms/music/software/source_code/old_musica/Realtime_FFT_Audio_Visualization_Original/

			it is a later version of this:
				https://swharden.com/blog/2016-07-31-real-time-audio-monitor-with-pyqt/
				https://github.com/swharden/Python-GUI-examples/tree/master/2016-07-37_qt_audio_monitor

			which I've already worked with and is saved here:
				~/rooms/music/software/source_code/old_musica/audio_frequency_monitor/

			After testing the audio_frequency_monitor with the pitch generator here:
				https://www.szynalski.com/tone-generator/

			IT WORKED TOO! IT OUTPUT THE RIGHT FREQUENCY
				the granularity of the frequency found isn't small enough though in my opinion
				i don't see a way to change it either
					https://numpy.org/doc/stable/reference/generated/numpy.fft.fft.html

			The note sung doesn't seem to work just right either

			REGARDLESS ... next steps are to:

				put the fft stuff of the audio_frequency_monitor into musica
					set up the y axis to be in decibles too
					find a website to measure decibles
					use the pure pitch website to make a noise (where all the dBs are from 1 frequency)
					verify the dBs on the chart match the dbs on the website you find

				verify it works with the online pitch thing

				compare the sound wave captured by sound device to the audio captured by pyaudio
					are they the same?
					put it all in a big array and plot the array over time
						use matplot lib so you can easily zoom and compare the data
						conduct an experiement where you
							save start_time and end_time
							calculate duration
							and divide the total lenght of the array (all the samples) by the duration to see what the actual sample rate is (hopefully its around 44100)

				is it possible to pass arguments to the np.fft.fft() or scipy.fft.fft() function in order to
				specify the frequency range and granularity we want to get the amplitudes of?
				If not, is it even mathematically impossible to make such specifications according to the
				fourier series?
				the following urls about numpy were closed but might be useful for this:

					how to extract frequency associated with fft values in python
					https://stackoverflow.com/questions/3694918/how-to-extract-frequency-associated-with-fft-values-in-python

					DOCS: numpy.fft.fftfreq
					https://numpy.org/doc/stable/reference/generated/numpy.fft.fftfreq.html

					Determining the magnitude of a certain frequency on the iPhone
					https://stackoverflow.com/questions/2921674/determining-the-magnitude-of-a-certain-frequency-on-the-iphone/2937762#2937762
				take the max and plot it over time

					How do I obtain the frequencies of each value in an FFT?
					https://stackoverflow.com/questions/4364823/how-do-i-obtain-the-frequencies-of-each-value-in-an-fft/4371627#4371627

					FFT of A Musical Note
					https://stackoverflow.com/questions/47325824/fft-of-a-musical-note

					DOCS: scipy.signal.spectrogram
					https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.spectrogram.html

					DOCS: scipy.fft.fft
					https://docs.scipy.org/doc/scipy/reference/generated/scipy.fft.fft.html#scipy.fft.fft

					Audio Frequencies in Python
					https://stackoverflow.com/questions/53308674/audio-frequencies-in-python

				put musical note pitch on the y axis of the gui

				... it will probably look like shit, but those are the next steps ...

		frequency FINALLy looks like its getting the right values in the data
		the chart itself though is looking over a very large frequency range
			so its not granular
			if a custom fft was made maybe it could look over a specific frequency range

			this might help
			https://towardsdatascience.com/understanding-audio-data-fourier-transform-fft-spectrogram-and-speech-recognition-a4072d228520

			C++ Audio Library Options (2018)
				1. Superpowered Audio SDK.
					Superpowered is the leading real-time, cross-platform C++ Audio Library for Desktop, Mobile, IoT and Embedded Devices on Android, iOS, macOS, tvOS, Linux and Windows.

				2. Aquila.
					Aquila is an open-source software and cross-platform DSP (Digital Signal Processing) library written in C++, focusing on frequency domain analysis.

						https://github.com/zsiciarz/aquila

						"The supplied example code and auxiliary programs however are written with the SMFL multimedia library and the Qt UI/Widgets library. While a reasonable Qt port exists for OS/2, the SMFL port on the other hand is outdated and you may not get any of the example programs to work unless you port them. Neither the examples or auxiliary programs are needed or in most cases even useful so this is not a showstopper at all."
						http://www.edm2.com/index.php/Aquila

				12. PortAudio.
					PortAudio is an open-source cross-platform audio library for managing audio input/output.

						PortAudio real-time audio processing for continuous input stream
						https://stackoverflow.com/questions/44645466/portaudio-real-time-audio-processing-for-continuous-input-stream

			https://superpowered.com/audio-library-list

			The Fast-Fourier Transform and Spectrograms for Audio Visualization
				c++
				audio lib:
				graphics lib: SFML (Simple and Fast Multimedia Library)
			https://benlevinson.com/projects/spectrograms

	then make the frequency over time chart
		must allow multiple lines

	amplitude dB may/may not be right
		voice should be around 60 dB
		https://www.alpinehearingprotection.co.uk/5-sound-levels-in-decibels/

		human hearing ranges from 0 dB to 120 dB
		https://www.cablechick.com.au/blog/why-does-my-amplifier-use-negative-db-for-volume/
			this says 10 dB to 130 dB
			https://www.sciencelearn.org.nz/resources/573-measuring-sound

		i used this as a reference
		but i also cheated and just put in the math to make it about right
		https://dsp.stackexchange.com/questions/40766/calculating-values-of-frequency-bins-in-python

	frequency Hz is too high
		middle c (c4) is 1031 when it should be 261
			Notes and their frequencies
			https://newt.phys.unsw.edu.au/jw/notes.html
		its pretty chaotic as well
		its in the right ballpark range though

		how i got frequency
		https://stackoverflow.com/questions/3694918/how-to-extract-frequency-associated-with-fft-values-in-python

	make basic python version of fft thing
		see sd_spectrogram.py in old_musica/src

	migrate to c++ and port audio

	guitar string/fret translation:

		see email from Oct 8th titled: MATLAB code not available anymore
			Mads GrÃ¦sbÃ¸ll Christensen
				Dear Lucius
				thanks for bringing this to our attention. You can find the code here:
				https://vbn.aau.dk/en/publications/estimation-of-guitar-string-fret-and-plucking-position-using-para
				/Mads

		Jacob MÃ¸ller Hjerrild: jahj@mapspeople.com
			Dear Lucius,
			Thanks for bringing The Missing Link to our attention. Please ask if you have any questions. I am available for online meetings also. I am interested in cooperation with likeminded people. I use to Work at TC electronic, but not anymore and in my daily Work there is No guitar ðŸ˜€
			Best
		Email from Oct 8th.

	it would be cool if:

		in the frequency chart:
			you had the option to see Hz on the y axis or Notes on the Y axis
			you can change the minimum amplitude threshold for if a frequency appears on the chart
			you have the option of a graph that show the present moment
				frequency on the x axis, ampltude on the y axis
				jus the current point in time too, not over time
			the louder you sang the thicker the line was

		in the soundwave chart:
			there was a title
				when the GraphicsWindow gets its own window the title appears
				but its gone when its a child of the mainwindow
			both plots appear on the same graph
				color coded with a legend
				put color codes in style sheet that could be organized as part of a theme
			you could have a checkbox for each channel, when cheched theire visable
				maybe this is in the view dropdown, and maybe its for other views too
			you could have a zoom scroll bar (modifies x_range, range: 20 to 500, default: 250)
			you could have a zoom scroll bar (modifies y_range, range: ? to ?)
			you could have a [pause] button that captures what the wave looks like when you press it

		give it display options:
			Soundwave
				make it so its not moving to the side like in the current plot but just wobbling like a string
				make y axis have amplitude in Amps (or whatever Amplitude's units ar, decibles I think)
			Frequency
				y axis notes (or Hz)
			5 line Sheet Music
			Tab

			Guitar FretBoard

			NOTE
				for frequency, 5 line sheet music, and Tab, make it so the user can control how fast the x axis (time) scrolls
					through the GUI (via a slide bar probably so that theres a max and a min)

GUI DESIGN:

	File:
		New
		Open
		Save
		Save As
		Close

	View:
		Fullscreen On/Off F11
		Number of Views > 
		Theme
			Light
			Dark
			Punk
			Pop
			Metal
			Custom

		I want to be able to control
			the number of views
			the number of instruments on each view
			the placement of the views
				stacked
					veritcal
					horizontal
				grid view
				etc.

		Sound Wave
		Piano Keys
			with options
				left (default)
				right
				top
				bottom
		Sheet Music
		Guitar Tab
		Fret Board
			left handed
			right handed (default)



	Setup:
		Interface
		Guitar Calibration

		OR I could make it have a video game style options
			Campaign
			Lessons
			Song Writing

		Basic Setup

SOURCES:

	Sounddevice is the library used to input the raw soundwave data
		the plot_input.py example is used to capture the sound from each channel of the scarlett 2i2 interface
		https://python-sounddevice.readthedocs.io/en/0.3.7/examples.html
	https://python-sounddevice.readthedocs.io/en/0.3.7/

